Easy

Task 1
//////////////////////////////////////////////////////////////////
using System;

class Program
{
    static void Main()
    {
        int resources = 0;

        Console.WriteLine($"Initial resources: {resources}");
        PrepareResources(resources);
        Console.WriteLine($"Resources left: {resources}");


        Console.ReadKey();
    }

    static void PrepareResources(int resource)
    {
        resource += 50;
        Console.WriteLine($"Prepared resources: {resource}");
    }
}
//////////////////////////////////////////////////////////////////

Task 2
//////////////////////////////////////////////////////////////////
using System;

class Program
{
    static void Main()
    {

        string planet = "Mars";

        Console.WriteLine(planet);
        UpdateStatus(ref planet);
        Console.WriteLine(planet);


        Console.ReadKey();
    }

    static void UpdateStatus(ref string planet)
    {
        planet += " - Prepared";
    }

}
//////////////////////////////////////////////////////////////////

Medium

Task 3
//////////////////////////////////////////////////////////////////
using System;

class Program
{

    public struct Spaceship
    {
        public string Name;
        public int Speed;
        public Spaceship(string name, int speed)
        {
            Name = name;
            Speed = speed;
        }
    }
    static void Main()
    {

        Spaceship spaceship = new Spaceship("Executor", 0);

        Console.WriteLine($"{spaceship.Name} initial speed is {spaceship.Speed} km/h");
        ChangeSpeed(ref spaceship);
        Console.WriteLine($"{spaceship.Name} current speed is {spaceship.Speed} km/h");

        Console.ReadKey();
    }

    static void ChangeSpeed(ref Spaceship spaceship)
    {
        spaceship.Speed = 100;
    }

}
//////////////////////////////////////////////////////////////////

Hard

Task 4
//////////////////////////////////////////////////////////////////
using System;

class Program
{

    public class Spacestation
    {
        public string Name;

        public Spacestation(string name)
        {
            Name = name;
        }
    }

    static void Main()
    {

        Spacestation firstStation = new Spacestation("Alpha");
        Console.WriteLine($"Generation of {firstStation.Name} : {GC.GetGeneration(firstStation)}");

        Spacestation secondStation = new Spacestation("Beta");
        Console.WriteLine($"Generation of {secondStation.Name} : {GC.GetGeneration(secondStation)}");

        Spacestation thirdStation = new Spacestation("Gamma");
        Console.WriteLine($"Generation of {thirdStation.Name} : {GC.GetGeneration(thirdStation)}");

        firstStation = null;
        GC.Collect();
        Console.WriteLine("\nGarbage collection #1");

        Console.WriteLine($"Generation of {secondStation.Name} : {GC.GetGeneration(secondStation)}");
        Console.WriteLine($"Generation of {thirdStation.Name} : {GC.GetGeneration(thirdStation)}");

        secondStation = null;
        GC.Collect();
        Console.WriteLine("\nGarbage collection #2");

        Console.WriteLine($"Generation of {thirdStation.Name} : {GC.GetGeneration(thirdStation)}");

        Console.ReadKey();
    }

}
//////////////////////////////////////////////////////////////////
